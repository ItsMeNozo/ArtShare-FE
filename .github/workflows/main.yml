name: ARTSHARE FE USER CI/CD Pipeline

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
  VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
  VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
  VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
  VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
  VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
  VITE_BE_URL: ${{ secrets.VITE_BE_URL }}
  VITE_S3_BUCKET_URL: ${{ secrets.VITE_S3_BUCKET_URL }}
  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: yarn install

      - name: Build the app
        run: yarn build

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: yarn install

      - name: Setup Code Climate test-reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter

      - name: Run tests
        run: yarn cy-run-unit

      - name: Upload Code Climate test report
        run: |
          ./cc-test-reporter format-coverage -t lcov coverage/lcov.info
          ./cc-test-reporter upload-coverage
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}  # Set the Code Climate Test Reporter ID as a secret

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   if: success()
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '22'

  #     - name: Install dependencies
  #       run: npm install

  #     - name: Build the app
  #       run: npm run build

  #     - name: Vercel CLI - Deploy
  #       uses: amondnet/vercel-action@v21
  #       with:
  #         vercel_token: ${{ secrets.VERCEL_TOKEN }}
  #         vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
  #         vercel_project_id: ${{ secrets.VERCEL_PROJECT_ID }}
  #         vercel_team_id: ${{ secrets.VERCEL_TEAM_ID }}
  #       env:
  #         VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
